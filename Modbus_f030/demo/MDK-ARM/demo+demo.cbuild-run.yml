cbuild-run:
  generated-by: csolution version 2.8.0
  solution: demo.csolution.yml
  target-type: demo
  compiler: AC6
  device: STMicroelectronics::STM32F030CCTx
  device-pack: Keil::STM32F0xx_DFP@3.0.0
  programming:
    - algorithm: ${CMSIS_PACK_ROOT}/Keil/STM32F0xx_DFP/3.0.0/CMSIS/Flash/STM32F0xx_256_2K.FLM
      start: 0x08000000
      size: 0x00040000
      default: true
    - algorithm: ${CMSIS_PACK_ROOT}/Keil/STM32F0xx_DFP/3.0.0/CMSIS/Flash/STM32F0xx_OPT.FLM
      start: 0x1FFFF800
      size: 0x00000010
  system-descriptions:
    - file: ${CMSIS_PACK_ROOT}/Keil/STM32F0xx_DFP/3.0.0/CMSIS/SVD/STM32F0x0.svd
      type: svd
  output:
    - file: out/demo/demo/demo.axf
      info: generate by demo+demo
      type: elf
  system-resources:
    memory:
      - name: Flash
        access: rx
        start: 0x08000000
        size: 0x00040000
        default: true
        startup: true
        from-pack: Keil::STM32F0xx_DFP@3.0.0
      - name: SRAM
        access: rwx
        start: 0x20000000
        size: 0x00008000
        default: true
        from-pack: Keil::STM32F0xx_DFP@3.0.0
  debugger:
    - name: <default>
      port: swd
      clock: 10000000
      dbgconf: RTE/Device/STM32F030CCTx/STM32F030_070.dbgconf
  debug-vars:
    vars: |
      __var DbgMCU_CR      = 0x00000006;   // DBGMCU_CR:  DBG_STOP, DBG_STANDBY
      __var DbgMCU_APB1_Fz = 0x00000000;   // DGBMCU_APB1_FZ: All Peripherals Operate as in Normal Mode
      __var DbgMCU_APB2_Fz = 0x00000000;   // DGBMCU_APB2_FZ: All Peripherals Operate as in Normal Mode
      __var DoOptionByteLoading = 0;       // Disabled
  debug-sequences:
    - name: DebugDeviceUnlock
      blocks:
        - execute: |
            Sequence("CheckID");
    - name: DebugCoreStart
      blocks:
        - execute: |
            // Replication of Standard Functionality
            Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
        - info: DbgMCU registers
          execute: |
            // Device Specific Debug Setup
            Write32(0x40021018, Read32(0x40021018) | 0x00400000);                   // Set RCC_APB2ENR.DBGMCUEN

            Write32(0x40015804, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
            Write32(0x40015808, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
            Write32(0x4001580C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
    - name: CheckID
      blocks:
        - execute: |
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // AHB-AP

            ROMTableBase = ReadAP(0xF8) & ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
        - if: jep106id != 0x20
          execute: |
            Query(0, "Not a genuine ST Device! Abort connection", 1);
            Message(2, "Not a genuine ST Device! Abort connection.");
    - name: DebugPortStop
      blocks:
        - execute: |
            __var connectionFlash = ( __connection & 0xF ) == 2 ;
            __var FLASH_BASE = 0x40022000 ;
            __var FLASH_CR = FLASH_BASE + 0x10 ;
            __var OBL_LAUNCH_BIT = ( 1 << 13 ) ;
            __var FLASH_CR_Value = 0 ;
            __var DoDebugPortStop = 1 ;
            __var DP_CTRL_STAT = 0x4 ;
            __var DP_SELECT = 0x8 ;
        - if: connectionFlash && DoOptionByteLoading
          execute: |
            DoDebugPortStop = 0 ;
            FLASH_CR_Value = Read32( FLASH_CR ) ;
            __errorcontrol = 1 ;
            // write OBL_LAUNCH bit (causes a reset)
            Write32( FLASH_CR, FLASH_CR_Value | ( OBL_LAUNCH_BIT ) ) ;
            __errorcontrol = 0 ;
        - if: DoDebugPortStop
          execute: |
            // Switch to DP Register Bank 0
            WriteDP(DP_SELECT, 0x00000000);
            // Power Down Debug port
            WriteDP(DP_CTRL_STAT, 0x00000000);

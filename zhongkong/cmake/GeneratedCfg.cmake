# This file was automatically generated by RASC

set(RASC_TARGET_DEVICE R9A07G084M04)
set(RASC_TARGET_ARCH cortex-r52)
set(RASC_PROJECT_NAME zhongkongv2)
SET(RASC_TOOLCHAIN_NAME, GCC)
SET(RASC_CMAKE_CXX_FLAGS "-g -O0 -mcpu=cortex-r52 -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/arm/CMSIS_5/CMSIS/Core_R/Include -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/api -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/instances -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/src/bsp/mcu/all/cr -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg/bsp -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_gen -I ${CMAKE_CURRENT_SOURCE_DIR}/src  -D_RZN_ORDINAL=1 -D_RZN_CORE=CR52_0 -D_RENESAS_RZN_  -Wunused -Wuninitialized -Wall -Wextra -Wmissing-declarations -Wconversion -Wpointer-arith -Wshadow -Wlogical-op -Waggregate-return -Wfloat-equal -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -mthumb  -std=c99 -MMD -MP -MF <SOURCE>.d -MT <OBJECT>")
SET(RASC_CMAKE_ASM_FLAGS "-g -O0 -mcpu=cortex-r52 -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/arm/CMSIS_5/CMSIS/Core_R/Include -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/api -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/instances -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/src/bsp/mcu/all/cr -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg/bsp -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_gen -I ${CMAKE_CURRENT_SOURCE_DIR}/src  -D_RZN_ORDINAL=1 -D_RZN_CORE=CR52_0 -D_RENESAS_RZN_  -Wunused -Wuninitialized -Wall -Wextra -Wmissing-declarations -Wconversion -Wpointer-arith -Wshadow -Wlogical-op -Waggregate-return -Wfloat-equal -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -mthumb   -x assembler-with-cpp -MMD -MP")
SET(RASC_CMAKE_C_FLAGS "-g -O0 -mcpu=cortex-r52 -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/arm/CMSIS_5/CMSIS/Core_R/Include -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/api -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/inc/instances -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn/fsp/src/bsp/mcu/all/cr -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_cfg/fsp_cfg/bsp -I ${CMAKE_CURRENT_SOURCE_DIR}/rzn_gen -I ${CMAKE_CURRENT_SOURCE_DIR}/src  -D_RZN_ORDINAL=1 -D_RZN_CORE=CR52_0 -D_RENESAS_RZN_  -Wunused -Wuninitialized -Wall -Wextra -Wmissing-declarations -Wconversion -Wpointer-arith -Wshadow -Wlogical-op -Waggregate-return -Wfloat-equal -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -mthumb  -std=c99 -MMD -MP -MF <SOURCE>.d -MT <OBJECT>")
SET(RASC_CMAKE_EXE_LINKER_FLAGS "-g -O0 -mcpu=cortex-r52 -Wunused -Wuninitialized -Wall -Wextra -Wmissing-declarations -Wconversion -Wpointer-arith -Wshadow -Wlogical-op -Waggregate-return -Wfloat-equal -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -mthumb -T script/fsp_xspi0_boot.ld -Xlinker --gc-sections -Wl,-Map,${PROJECT_NAME}.map --specs=nano.specs -L ${CMAKE_CURRENT_SOURCE_DIR}// -L ${CMAKE_CURRENT_SOURCE_DIR}//script  -o ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.elf")
SET(RASC_CMAKE_EXE_LIBRARY_NAME_FLAGS "")
SET(RASC_ASM_FILES "${CMAKE_CURRENT_SOURCE_DIR}/rzn_gen/*.asm")

# Custom targets are defined below
include_guard()

# Create platform-specific command line for running Smart Configurator as a backgrounded
# process, which avoids blocking any calling IDEs
file(TO_NATIVE_PATH "${RASC_EXE_PATH}" RASC_EXE_NATIVE_PATH)
if(CMAKE_HOST_WIN32)
    set(RASC_COMMAND start "" /b "${RASC_EXE_NATIVE_PATH}" configuration.xml)
else()
    set(RASC_COMMAND sh -c \"${RASC_EXE_NATIVE_PATH} configuration.xml &\")
endif()

# Make target for opening the FSP Configuration in Smart Configurator
add_custom_target(rasc
    COMMAND ${RASC_COMMAND}
    WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
    COMMENT "FSP Smart Configurator"
)
